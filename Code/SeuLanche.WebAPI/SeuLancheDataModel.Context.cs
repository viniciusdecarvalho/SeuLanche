//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SeuLanche.WebAPI
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SeuLancheContext : DbContext
    {
        public SeuLancheContext()
            : base("name=SeuLancheContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Ingredientes> Ingredientes { get; set; }
        public virtual DbSet<IngredientesValor> IngredientesValor { get; set; }
        public virtual DbSet<Lanches> Lanches { get; set; }
        public virtual DbSet<LanchesIngredientes> LanchesIngredientes { get; set; }
        public virtual DbSet<Pedidos> Pedidos { get; set; }
        public virtual DbSet<PedidosLanches> PedidosLanches { get; set; }
        public virtual DbSet<PedidosLanchesItens> PedidosLanchesItens { get; set; }
        public virtual DbSet<PedidosSituacao> PedidosSituacao { get; set; }
        public virtual DbSet<Promocoes> Promocoes { get; set; }
        public virtual DbSet<IngredientesLanche> IngredientesLanche { get; set; }
        public virtual DbSet<IngredientesValorVigencia> IngredientesValorVigencia { get; set; }
        public virtual DbSet<LanchesPreco> LanchesPreco { get; set; }
        public virtual DbSet<PedidosPromocoes> PedidosPromocoes { get; set; }
        public virtual DbSet<PedidosSaldo> PedidosSaldo { get; set; }
    
        public virtual int PedidoAdicionarIngrediente(Nullable<int> sequencialPedidoLanche, Nullable<int> sequencialIngrediente)
        {
            var sequencialPedidoLancheParameter = sequencialPedidoLanche.HasValue ?
                new ObjectParameter("SequencialPedidoLanche", sequencialPedidoLanche) :
                new ObjectParameter("SequencialPedidoLanche", typeof(int));
    
            var sequencialIngredienteParameter = sequencialIngrediente.HasValue ?
                new ObjectParameter("SequencialIngrediente", sequencialIngrediente) :
                new ObjectParameter("SequencialIngrediente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PedidoAdicionarIngrediente", sequencialPedidoLancheParameter, sequencialIngredienteParameter);
        }
    
        public virtual int PedidoAdicionarLanche(Nullable<int> sequencialPedido, Nullable<int> sequencialLanche, ObjectParameter sequencialPedidoLanche)
        {
            var sequencialPedidoParameter = sequencialPedido.HasValue ?
                new ObjectParameter("SequencialPedido", sequencialPedido) :
                new ObjectParameter("SequencialPedido", typeof(int));
    
            var sequencialLancheParameter = sequencialLanche.HasValue ?
                new ObjectParameter("SequencialLanche", sequencialLanche) :
                new ObjectParameter("SequencialLanche", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PedidoAdicionarLanche", sequencialPedidoParameter, sequencialLancheParameter, sequencialPedidoLanche);
        }
    
        public virtual int PedidoAlterarLanche(Nullable<int> sequencialPedidoLanche, Nullable<int> sequencialIngrediente, Nullable<int> quantidade)
        {
            var sequencialPedidoLancheParameter = sequencialPedidoLanche.HasValue ?
                new ObjectParameter("SequencialPedidoLanche", sequencialPedidoLanche) :
                new ObjectParameter("SequencialPedidoLanche", typeof(int));
    
            var sequencialIngredienteParameter = sequencialIngrediente.HasValue ?
                new ObjectParameter("SequencialIngrediente", sequencialIngrediente) :
                new ObjectParameter("SequencialIngrediente", typeof(int));
    
            var quantidadeParameter = quantidade.HasValue ?
                new ObjectParameter("Quantidade", quantidade) :
                new ObjectParameter("Quantidade", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PedidoAlterarLanche", sequencialPedidoLancheParameter, sequencialIngredienteParameter, quantidadeParameter);
        }
    
        public virtual int PedidoCriar(ObjectParameter sequencial)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PedidoCriar", sequencial);
        }
    
        public virtual int PedidoDiminuirIngrediente(Nullable<int> sequencialPedidoLanche, Nullable<int> sequencialIngrediente)
        {
            var sequencialPedidoLancheParameter = sequencialPedidoLanche.HasValue ?
                new ObjectParameter("SequencialPedidoLanche", sequencialPedidoLanche) :
                new ObjectParameter("SequencialPedidoLanche", typeof(int));
    
            var sequencialIngredienteParameter = sequencialIngrediente.HasValue ?
                new ObjectParameter("SequencialIngrediente", sequencialIngrediente) :
                new ObjectParameter("SequencialIngrediente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PedidoDiminuirIngrediente", sequencialPedidoLancheParameter, sequencialIngredienteParameter);
        }
    
        public virtual int PedidoEncerrar(Nullable<int> sequencialPedido, Nullable<bool> foiConcluido)
        {
            var sequencialPedidoParameter = sequencialPedido.HasValue ?
                new ObjectParameter("SequencialPedido", sequencialPedido) :
                new ObjectParameter("SequencialPedido", typeof(int));
    
            var foiConcluidoParameter = foiConcluido.HasValue ?
                new ObjectParameter("FoiConcluido", foiConcluido) :
                new ObjectParameter("FoiConcluido", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PedidoEncerrar", sequencialPedidoParameter, foiConcluidoParameter);
        }
    
        public virtual int PedidoLimpar(Nullable<int> sequencialPedido)
        {
            var sequencialPedidoParameter = sequencialPedido.HasValue ?
                new ObjectParameter("SequencialPedido", sequencialPedido) :
                new ObjectParameter("SequencialPedido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PedidoLimpar", sequencialPedidoParameter);
        }
    
        public virtual int PedidoRemoverLanche(Nullable<int> sequencialPedido, Nullable<int> sequencialLanche)
        {
            var sequencialPedidoParameter = sequencialPedido.HasValue ?
                new ObjectParameter("SequencialPedido", sequencialPedido) :
                new ObjectParameter("SequencialPedido", typeof(int));
    
            var sequencialLancheParameter = sequencialLanche.HasValue ?
                new ObjectParameter("SequencialLanche", sequencialLanche) :
                new ObjectParameter("SequencialLanche", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PedidoRemoverLanche", sequencialPedidoParameter, sequencialLancheParameter);
        }
    }
}
